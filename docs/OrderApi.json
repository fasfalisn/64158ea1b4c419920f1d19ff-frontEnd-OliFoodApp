
[{
    "methodType":"POST",
    "methodName":"createorder",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Order"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiOrderApi = new TempApi.OrderApi();",
    "importModelParameter":["let order = new TempApi.Order();"],
    "modelNames":["order"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiOrderApi.createorder( order, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deleteorder",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiOrderApi = new TempApi.OrderApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiOrderApi.deleteorder( orderId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAllorder",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Order]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiOrderApi = new TempApi.OrderApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiOrderApi.getAllorder((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GETBYPARAMS",
    "methodName":"getByParamsorder",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Order]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiOrderApi = new TempApi.OrderApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiOrderApi.getByParamsorder( filter, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"getorder",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Order"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiOrderApi = new TempApi.OrderApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiOrderApi.getorder( orderId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updateorder",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Order"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiOrderApi = new TempApi.OrderApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiOrderApi.updateorder( orderId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
